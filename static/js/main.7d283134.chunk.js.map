{"version":3,"sources":["pages/About Page/about.jsx","pages/Logic/projects.js","pages/Logic/selectors.js","pages/Work Pages/project-cell.jsx","pages/Work Pages/work.jsx","App.js","serviceWorker.js","index.js"],"names":["About","className","style","fontWeight","href","download","Projects","1","id","title","byline","body","role","stack","links","2","3","4","5","Ids","Object","keys","map","parseInt","SelectProjects","ids","projects","values","_","pick","ProjectCell","activeTags","color","StackDisplay","tag","has","LinksDisplay","length","link","Work","useState","tags","proj","tech","Set","add","GenerateTags","setActiveTags","filteredIds","reduce","acc","curr","intersection","outline","onClick","filter","t","size","clickTag","project","key","App","activeStyle","to","exact","from","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4MAEaA,EAAQ,kBACnB,qBAAKC,UAAU,gCAAf,SACE,qBAAKA,UAAU,GAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,oBAAGA,UAAU,gBAAb,gDAEE,sBAAMC,MAAO,CAAEC,WAAY,QAA3B,yBAFF,+BAKA,mBAAGF,UAAU,gBAAb,qPAMA,mBAAGA,UAAU,gBAAb,4GAIA,iCACE,mBACEG,KAAK,cACLH,UAAU,oDACVI,SAAS,aAHX,yC,wBCnBCC,EAAW,CACtBC,EAAG,CACDC,GAAI,EACJC,MAAO,SACPC,OAAQ,4BACRC,KACE,mLACFC,KACE,iIACFC,MAAO,CACL,aACA,SACA,SACA,wBACA,QACA,QACA,aACA,SACA,YACA,OACA,WACA,gBAEFC,MAAO,CACL,CAAC,iBAAkB,2BACnB,CAAC,aAAc,4BAInBC,EAAG,CACDP,GAAI,EACJC,MAAO,YACPC,OAAQ,8CACRC,KACE,iXACFC,KAAM,0DACNC,MAAO,CAAC,OAAQ,aAAc,MAAO,OAAQ,eAC7CC,MAAO,CACL,CAAC,cAAe,6CAChB,CAAC,UAAW,6CACZ,CAAC,iBAAkB,6CACnB,CAAC,gBAAiB,+CAItBE,EAAG,CACDR,GAAI,EACJC,MAAO,mBACPC,OAAQ,mCACRC,KACE,0UACFC,KACE,4FACFC,MAAO,CAAC,wBACRC,MAAO,IAGTG,EAAG,CACDT,GAAI,EACJC,MAAO,WACPC,OAAQ,mBACRC,KACE,sPACFC,KACE,sFACFC,MAAO,CACL,SACA,WACA,UACA,SACA,MACA,YACA,UACA,MACA,SACA,cAEFC,MAAO,CACL,CAAC,kBAAmB,mDAIxBI,EAAG,CACDV,GAAI,EACJC,MAAO,mBACPC,OAAQ,cACRC,KACE,kZACFC,KACE,sFACFC,MAAO,CACL,SACA,WACA,UACA,SACA,aACA,SACA,gBACA,OAEFC,MAAO,CAAC,CAAC,cAAe,iDAwBfK,EAAMC,OAAOC,KAAKf,GAAUgB,KAAI,SAACd,GAAD,OAAQe,SAASf,M,yBC9HjDgB,EAAiB,SAACC,EAAKC,GAAN,OAC5BN,OAAOO,OAAOC,IAAEC,KAAKH,EAAUD,KCDpBK,EAAc,SAAC,GASrB,IARLtB,EAQI,EARJA,GACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,OACAE,EAKI,EALJA,KACAC,EAII,EAJJA,MACAF,EAGI,EAHJA,KACAG,EAEI,EAFJA,MACAiB,EACI,EADJA,WAEA,OACE,sBAAK9B,UAAU,6BAAf,UACE,oBACEA,UAAU,gCACVC,MAAO,CAAE8B,MAAO,WAFlB,SAIGvB,IAEH,sBAAKR,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BS,IAC5B,mBAAGT,UAAU,OAAb,SAAqBU,IACrB,mBAAGV,UAAU,sBAAb,mBACA,cAAC,EAAD,CAAcY,MAAOA,EAAOkB,WAAYA,IACxC,mBAAG9B,UAAU,iBAAb,kBACA,4BAAIW,IACJ,cAAC,EAAD,CAAcE,MAAOA,SAdwBN,IAoBxCyB,EAAe,SAAC,GAA2B,IAAzBpB,EAAwB,EAAxBA,MAAOkB,EAAiB,EAAjBA,WACpC,OAAOlB,EAAMS,KAAI,SAACY,GAAD,OACf,qBAEEjC,UAAS,iDACP8B,EAAWI,IAAID,GAAO,cAAgB,eAH1C,SAMGA,GALIA,OAUEE,EAAe,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MAC7B,OAAwB,IAAjBA,EAAMuB,OACX,qCACE,mBAAGpC,UAAU,sBAAb,mBACCa,EAAMQ,KAAI,SAACgB,GAAD,OACT,iCACE,mBAAGlC,KAAMkC,EAAK,GAAIrC,UAAU,oCAA5B,SACGqC,EAAK,MAFGA,EAAK,UAOpB,MCpDOC,EAAO,WAAO,IAAD,EACTC,oBAAS,kBFFE,SAACd,GAC3B,IADwC,EAClCe,EAAO,GAD2B,cAGrBf,GAHqB,IAGxC,2BAA6B,CAAC,IAAD,EAAlBgB,EAAkB,sBACRA,EAAK7B,OADG,IAC3B,2BAA+B,CAAC,IAArB8B,EAAoB,QAC7BF,EAAKE,GAAQ,IAAIC,IAAIH,EAAKE,IAAS,IAAIE,IAAIH,EAAKlC,KAFvB,gCAHW,8BAQxC,OAAOiC,EENuBK,CAAatB,EAAeL,EAAKb,OAAxDmC,EADiB,sBAEYD,mBAAS,IAAII,KAFzB,mBAEjBb,EAFiB,KAELgB,EAFK,KAWlBC,EAAc,YAAIjB,GAAYkB,QAClC,SAACC,EAAKC,GAAN,OAAevB,IAAEwB,aAAaF,EAAf,YAAwBT,EAAKU,OAC5ChC,GAGF,OACE,sBAAKlB,UAAU,YAAf,UACE,oBAAIA,UAAU,6BAAd,oCACCmB,OAAOC,KAAKoB,GAAMnB,KAAI,SAACY,GAAD,OACrB,wBAEEhC,MAAO,CAAEmD,QAAS,QAClBpD,UAAS,mFACP8B,EAAWI,IAAID,GAAO,cAAgB,eAExCoB,QAAS,kBAtBA,SAACpB,GAAD,OACfH,EAAWI,IAAID,GACXa,EAAc,IAAIH,IAAI,YAAIb,GAAYwB,QAAO,SAACC,GAAD,OAAOA,IAAMtB,OAC1Da,EACE,IAAIH,IAAwB,IAApBb,EAAW0B,KAAa1B,EAAa,IAAIc,IAAIX,IAkBtCwB,CAASxB,IAN1B,SAQGA,GAPIA,MAUT,qBAAKjC,UAAU,gCAAf,SACGuB,EAAewB,EAAa1C,GAAUgB,KAAI,SAACqC,GAAD,OACzC,wBAAC,EAAD,2BAAiBA,GAAjB,IAA0BC,IAAKD,EAAQnD,GAAIuB,WAAYA,c,+BCmClD8B,MA7Df,WACE,OACE,eAAC,IAAD,WACE,gCACE,qBAAI5D,UAAU,iDAAd,UACE,sBAAMC,MAAO,CAAE8B,MAAO,WAAtB,qBADF,WAGA,mBACE/B,UAAU,6BACVG,KAAK,wCAFP,SAIE,cAAC,IAAD,MAEF,mBACEH,UAAU,6BACVG,KAAK,oCAFP,SAIE,cAAC,IAAD,MAEF,mBACEH,UAAU,6BACVG,KAAK,sDAFP,SAIE,cAAC,IAAD,SAGJ,cAAC,IAAD,CACEH,UAAU,kBACV6D,YAAa,CACX9B,MAAO,UACP7B,WAAY,UAEd4D,GAAG,SANL,mBAUA,cAAC,IAAD,CACE9D,UAAU,kBACV6D,YAAa,CACX9B,MAAO,UACP7B,WAAY,UAEd4D,GAAG,QANL,kBAUA,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIF,GAAG,WAE5B,cAAC,IAAD,CAAOG,KAAK,SAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,aCvDUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7d283134.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const About = () => (\n  <div className=\"flex justify-center mt-10 m-5\">\n    <div className=\"\">\n      <div className=\"max-w-prose\">\n        <div className=\"flex flex-col space-y-4\">\n          <p className=\"leading-tight\">\n            I'm a Computer Engineering graduate\n            <span style={{ fontWeight: \"bold\" }}> (NJIT '17)</span> based in\n            Jersey City, NJ\n          </p>\n          <p className=\"leading-tight\">\n            Recently, in March I completed a two-year service as a Peace Corps\n            volunteer in Peru. I worked in the Water and Sanitation sector,\n            where I assisted rural village water operators with system\n            management and chlorination technologies.\n          </p>\n          <p className=\"leading-tight\">\n            I'm now back home and am currently looking for my first fulltime\n            role as a fullstack engineer.\n          </p>\n          <button>\n            <a\n              href=\"/Resume.pdf\"\n              className=\"bg-color hover:bg-blue-500 p-2 rounded text-white\"\n              download=\"Resume.pdf\"\n            >\n              Download Resume\n            </a>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default About;\n","//To add to list of projects, just keep incrementing this lists ids and each project must have the following sections: id, title, byline, body, role, stack. Links can conditionally appear or not.\n//Stack must be correct to the letter and there cant be duplicate technologies in an item, or there will be a (non-fatal) key error for tag displays\n//links must follow the following convention: [Name desired on button, the link itself beginning with https://]\n\nexport const Projects = {\n  1: {\n    id: 1,\n    title: \"Gohort\",\n    byline: \"Trip planning, simplified\",\n    body:\n      \"Gohort is a collaborative trip planning tool that makes group planning as easy as pressing a button. It's still under construction, but you can see project updates on its page.\",\n    role:\n      \"I am currently building out some feature sets as part of a small team that adheres to an agile/scrum methodology to push code.\",\n    stack: [\n      \"Javascript\",\n      \"Python\",\n      \"Django\",\n      \"Django Rest Framework\",\n      \"React\",\n      \"Redux\",\n      \"PostgreSQL\",\n      \"Docker\",\n      \"Blueprint\",\n      \"Jest\",\n      \"Tailwind\",\n      \"Google Cloud\",\n    ],\n    links: [\n      [\"Gohort Website\", \"https://www.gohort.com/\"],\n      [\"Gohort App\", \"https://app.gohort.com\"],\n    ],\n  },\n\n  2: {\n    id: 2,\n    title: \"Agua Vida\",\n    byline: \"Make water treatment accessible to everyone\",\n    body:\n      \"AGUA VIDA is a series of applications designed to help train rural water operators based in rural areas in Peru on chlorination formulas. These formulas are often complex (I helped write a 100+ page manual on them!). In a world where waterborne illnesses are still a leading cause of death, I decided to use technology to make chlorination knowledge more accessible.\",\n    role: \"I am the sole developer and this is a personal project.\",\n    stack: [\"Java\", \"Javascript\", \"Vue\", \"VueX\", \"Google Play\"],\n    links: [\n      [\"Android App\", \"https://github.com/steveschannel/AguaVida\"],\n      [\"Web App\", \"https://steveschannel.github.io/avwebapp/\"],\n      [\"Github Android\", \"https://github.com/steveschannel/AguaVida\"],\n      [\"Github Webapp\", \"https://github.com/steveschannel/avwebapp\"],\n    ],\n  },\n\n  3: {\n    id: 3,\n    title: \"Peace Corps Misc\",\n    byline: \"Water and Sanitation Information\",\n    body:\n      \"During my time in the Peace Corps I managed several documentation efforts for my post, as well as creating different training materials to be used by other volunteers. From presentations to books, I helped create materials that stay in use to this day, and I continue to collaborate on a part-time basis to help my former post.\",\n    role:\n      \"This is work that I did in conjunction with program managers of the WASH program in Lima.\",\n    stack: [\"Adobe Creative Cloud\"],\n    links: [],\n  },\n\n  4: {\n    id: 4,\n    title: \"Coalesce\",\n    byline: \"Find a sole-mate\",\n    body:\n      \"This is a 'donation network' where I envision people that have one leg/arm can find someone in their exact same size, with the opposite leg still present, in order to foster a common donating relationship should the opportunity present itself.\",\n    role:\n      \"I am the sole developer and this is a personal project I started during a hackathon\",\n    stack: [\n      \"Django\",\n      \"Graphene\",\n      \"GraphQL\",\n      \"Docker\",\n      \"GIS\",\n      \"GeoDjango\",\n      \"PostGIS\",\n      \"Git\",\n      \"Python\",\n      \"Javascript\",\n    ],\n    links: [\n      [\"Coalesce Github\", \"https://github.com/steveschannel/coalesce-api\"],\n    ],\n  },\n\n  5: {\n    id: 5,\n    title: \"Random Card Game\",\n    byline: \"Pick a card\",\n    body:\n      \"This was a fairly involved programming challenge given to me by Uplift. I spent a fair amount of time on it, and users can create their own decks of any length, and then choose one of them to play a randomized game where the api serves 5 random cards from the decks. Users win if there is an ace among the cards. The games can also be rigged depending on whether or not the selected deck has an ace.\",\n    role:\n      \"I am the sole developer and this is a personal project I started during a hackathon\",\n    stack: [\n      \"Django\",\n      \"Graphene\",\n      \"GraphQL\",\n      \"Docker\",\n      \"Javascript\",\n      \"Python\",\n      \"Apollo Client\",\n      \"Git\",\n    ],\n    links: [[\"Game Github\", \"https://github.com/steveschannel/card-game\"]],\n  },\n  // 6: {\n  //   id: 6,\n  //   title: \"Misc\",\n  //   byline: \"Programming challenges\",\n  //   body:\n  //     \"This is a 'donation network' where I envision people that have one leg/arm can find someone in their exact same size, with the opposite leg still present, in order to foster a common donating relationship should the opportunity present itself.\",\n  //   role:\n  //     \"I am the sole developer and this is a personal project I started during a hackathon\",\n  //   stack: [\n  //     \"Django\",\n  //     \"Graphene\",\n  //     \"GrapQL\",\n  //     \"Docker\",\n  //     \"GIS\",\n  //     \"GeoDjango\",\n  //     \"PostGIS\",\n  //     \"Git\",\n  //   ],\n  //   links: [[\"Github collection\", \"https://www.gohort.com/\"]],\n  // },\n};\n\nexport const Ids = Object.keys(Projects).map((id) => parseInt(id));\n","import _ from \"lodash\";\n\nexport const SelectProjects = (ids, projects) =>\n  Object.values(_.pick(projects, ids));\n\nexport const GenerateTags = (projects) => {\n  const tags = {};\n\n  for (const proj of projects) {\n    for (const tech of proj.stack) {\n      tags[tech] = new Set(tags[tech] || []).add(proj.id);\n    }\n  }\n  return tags;\n};\n","import React from \"react\";\n\nexport const ProjectCell = ({\n  id,\n  title,\n  byline,\n  role,\n  stack,\n  body,\n  links,\n  activeTags,\n}) => {\n  return (\n    <div className=\"rounded shadow-xl p-10 m-5\" key={id}>\n      <h1\n        className=\"text-2xl font-black uppercase\"\n        style={{ color: \"#235789\" }}\n      >\n        {title}\n      </h1>\n      <div className=\"max-w-md\">\n        <h2 className=\"font-light\">{byline}</h2>\n        <p className=\"mt-2\">{body}</p>\n        <p className=\"mt-2 mb-2 font-bold\">Stack</p>\n        <StackDisplay stack={stack} activeTags={activeTags} />\n        <p className=\"mt-2 font-bold\">Role</p>\n        <p>{role}</p>\n        <LinksDisplay links={links} />\n      </div>\n    </div>\n  );\n};\n\nexport const StackDisplay = ({ stack, activeTags }) => {\n  return stack.map((tag) => (\n    <div\n      key={tag}\n      className={`p-1 mr-2 mb-2  rounded-sm inline-block ${\n        activeTags.has(tag) ? \"bg-blue-300\" : \"bg-gray-300\"\n      }`}\n    >\n      {tag}\n    </div>\n  ));\n};\n\nexport const LinksDisplay = ({ links }) => {\n  return links.length !== 0 ? (\n    <>\n      <p className=\"mt-2 mb-2 font-bold\">Links</p>\n      {links.map((link) => (\n        <button key={link[0]}>\n          <a href={link[1]} className=\"p-1 mr-2 mb-2 inline-block border\">\n            {link[0]}\n          </a>\n        </button>\n      ))}\n    </>\n  ) : null;\n};\n","import React, { useState } from \"react\";\nimport { Projects, Ids } from \"../Logic/projects\";\nimport { SelectProjects, GenerateTags } from \"../Logic/selectors\";\nimport { ProjectCell } from \"./project-cell\";\nimport _ from \"lodash\";\n\nexport const Work = () => {\n  const [tags] = useState(() => GenerateTags(SelectProjects(Ids, Projects)));\n  const [activeTags, setActiveTags] = useState(new Set());\n\n  const clickTag = (tag) =>\n    activeTags.has(tag)\n      ? setActiveTags(new Set([...activeTags].filter((t) => t !== tag)))\n      : setActiveTags(\n          new Set(activeTags.size !== 0 ? activeTags : []).add(tag)\n        );\n\n  const filteredIds = [...activeTags].reduce(\n    (acc, curr) => _.intersection(acc, [...tags[curr]]),\n    Ids\n  );\n\n  return (\n    <div className=\"mt-5 mx-5\">\n      <h1 className=\"mb-2 font-bold text-center\">Filter projects by tag</h1>\n      {Object.keys(tags).map((tag) => (\n        <button\n          key={tag}\n          style={{ outline: \"none\" }}\n          className={`p-1 mr-2 mb-2 hover:bg-blue-500 hover:text-white rounded-sm inline-block ${\n            activeTags.has(tag) ? \"bg-blue-300\" : \"bg-gray-300\"\n          }`}\n          onClick={() => clickTag(tag)}\n        >\n          {tag}\n        </button>\n      ))}\n      <div className=\"flex flex-wrap justify-center\">\n        {SelectProjects(filteredIds, Projects).map((project) => (\n          <ProjectCell {...project} key={project.id} activeTags={activeTags} />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Work;\n","import React from \"react\";\nimport { About } from \"./pages/About Page/about\";\nimport { Work } from \"./pages/Work Pages/work\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  NavLink,\n} from \"react-router-dom\";\nimport { AiFillMail, AiFillLinkedin, AiFillGithub } from \"react-icons/ai\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <h1 className=\"my-5 ml-5 font-extrabold text-3xl inline-block\">\n          <span style={{ color: \"#235789\" }}>STEPHEN</span> CHAN\n        </h1>\n        <a\n          className=\"inline-block ml-5 text-2xl\"\n          href=\"mailto:stephen.albaran.chan@gmail.com\"\n        >\n          <AiFillMail />\n        </a>\n        <a\n          className=\"inline-block ml-5 text-2xl\"\n          href=\"https://github.com/steveschannel/\"\n        >\n          <AiFillGithub />\n        </a>\n        <a\n          className=\"inline-block ml-5 text-2xl\"\n          href=\"https://www.linkedin.com/in/stephen-chan-50074413b/\"\n        >\n          <AiFillLinkedin />\n        </a>\n      </div>\n      <NavLink\n        className=\"ml-5 font-light\"\n        activeStyle={{\n          color: \"#235789\",\n          fontWeight: \"bolder\",\n        }}\n        to=\"/about\"\n      >\n        ABOUT\n      </NavLink>\n      <NavLink\n        className=\"ml-5 font-light\"\n        activeStyle={{\n          color: \"#235789\",\n          fontWeight: \"bolder\",\n        }}\n        to=\"/work\"\n      >\n        WORK\n      </NavLink>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/about\" />\n\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path=\"/work\">\n          <Work />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}