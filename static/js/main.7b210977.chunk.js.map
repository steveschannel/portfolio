{"version":3,"sources":["pages/About Page/1.png","pages/Work Pages/PDF Design Portfolio.pdf","pages/About Page/about.jsx","pages/Work Pages/work.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","src","me","alt","style","color","fontWeight","href","Work","Portfolio","download","App","activeStyle","borderStyle","to","exact","from","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,+B,mBCA3CD,EAAOC,QAAU,IAA0B,kD,6NCK9BC,G,MAAQ,kBACjB,6BACI,yBAAKC,UAAU,wBAEX,yBAAKA,UAAU,SACX,yBAAKC,IAAKC,IAAIC,IAAI,SAASH,UAAU,UACrC,wBAAII,MAAO,CAAEC,MAAO,YAApB,uBACA,yBAAKL,UAAU,QACX,6BACI,kEAAuC,0BAAMI,MAAO,CAAEE,WAAY,SAA3B,cAAvC,6BACA,wQACA,+HAGR,uBAAGC,KAAK,cAAcP,UAAU,UAAhC,sBAKJ,yBAAKA,UAAU,UACX,yBAAKA,UAAU,OAAOI,MAAO,IAEzB,wBAAIJ,UAAU,kBAAd,UACA,qDACA,4DACA,0CACA,mDACA,wCACA,yCACA,wCACA,qDACA,oCACA,gHACA,iDACA,uDAIR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,OAAOI,MAAO,IAEzB,wBAAIJ,UAAU,kBAAd,sBACA,sDACA,0BAAMA,UAAU,gBAAhB,2BACA,sLACA,2CACA,0BAAMA,UAAU,gBAAhB,8BACA,gMACA,uCACA,0BAAMA,UAAU,gBAAhB,wBACA,0IACA,oEACA,0BAAMA,UAAU,gBAAhB,6BACA,sIACA,wDACA,0BAAMA,UAAU,gBAAhB,8BACA,kL,gBCzDPQ,EAAO,kBAChB,6BACI,yBAAKR,UAAU,gBAEX,yBAAKA,UAAU,WACX,uCAGJ,yBAAKA,UAAU,WACX,0CAGJ,yBAAKA,UAAU,WACX,6CAIR,uBAAGO,KAAM,CAAEE,uBAAaT,UAAU,SAASU,SAAS,YAApD,8B,6BC+BOC,MAvCf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKX,UAAU,YACb,4CACA,kCAAO,kBAAC,IAAD,CAAYA,UAAU,SAA7B,IAAuC,kBAAC,IAAD,CAAgBA,UAAU,SAAjE,IAA2E,kBAAC,IAAD,CAAcA,UAAU,WAErG,yBAAKA,UAAU,0BAEb,kBAAC,IAAD,CAASA,UAAU,gBAAgBY,YAAa,CAC9CP,MAAO,UACPQ,YAAa,uBACbP,WAAY,UACXQ,GAAG,SAJN,QAOA,kBAAC,IAAD,CAASd,UAAU,mBAAmBY,YAAa,CACjDP,MAAO,UACPQ,YAAa,uBACbP,WAAY,UACXQ,GAAG,UAJN,UAOF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIF,GAAG,WAE5B,kBAAC,IAAD,CAAOG,KAAK,UACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,UChCUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7b210977.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.e4abba38.png\";","module.exports = __webpack_public_path__ + \"static/media/PDF Design Portfolio.e8828d8e.pdf\";","import React from 'react';\nimport me from './1.png'\nimport './about.css';\n// import '%PUBLIC_URL%/Resume.pdf'\n\nexport const About = () =>\n    <div>\n        <div className=\"flex-container-outer\">\n\n            <div className=\"about\" >\n                <img src={me} alt=\"Avatar\" className=\"image\" />\n                <h2 style={{ color: \"#235789\" }} >FULLSTACK ENGINEER </h2>\n                <div className=\"text\" >\n                    <div>\n                        <p>I'm a Computer Engineering graduate <span style={{ fontWeight: \"bold\" }}>(NJIT '17)</span> based in Jersey City, NJ</p>\n                        <p> Recently, in March I completed a two-year service as a Peace Corps volunteer in Peru. I worked in the Water and Sanitation sector, where I assisted rural village water operators with system management and chlorination technologies. </p>\n                        <p> I'm now back home and am currently looking for my first fulltime role as a software engineer.</p>\n                    </div>\n                </div>\n                <a href=\"/Resume.pdf\" className=\"button\"\n                // download=\"Resume.pdf\"\n                > Download Resume </a>\n            </div>\n\n            <div className=\"skills\">\n                <div className=\"text\" style={{\n                }}>\n                    <h2 className=\"section-header\">Skills</h2>\n                    <h4>Programming Languages</h4>\n                    <p>Python, Javascript, Java, C++</p>\n                    <h4>Frameworks</h4>\n                    <p>Django, VueJS, React</p>\n                    <h4>Database</h4>\n                    <p>PostgreSQL</p>\n                    <h4>Frontend</h4>\n                    <p>HTML5, CSS3, Bootstrap</p>\n                    <h4>Misc</h4>\n                    <p>Git, Unit Testing, Linux, Redux, Docker, Wordpress, Adobe Creative Suite, Sketch,</p>\n                    <h4>Foreign Languages</h4>\n                    <p>Spanish - Advanced Low</p>\n                </div>\n            </div>\n\n            <div className=\"skills\">\n                <div className=\"text\" style={{\n                }}>\n                    <h2 className=\"section-header\">Employment History</h2>\n                    <h4>US Peace Corps - Peru </h4>\n                    <span className=\"dates-worked\">March 2018 - March 2020</span>\n                    <p>Trained rural water operators on the use of chlorination technologies local to Peru, improving water quality for a district of over 10,000 inhabitants.</p>\n                    <h4>ITMS - NJIT</h4>\n                    <span className=\"dates-worked\">September 2015 - June 2017</span>\n                    <p>Worked with team of students to meet the computing needs of staff and students, initiating repairs and maintaining computers and equipment throughout the campus.</p>\n                    <h4>KIPP NJ</h4>\n                    <span className=\"dates-worked\">June 2016 - May 2017</span>\n                    <p>Worked with IT team across Newark school district to manage and maintain computing systems within network. </p>\n                    <h4>The Vector, Student Newspaper - NJIT</h4>\n                    <span className=\"dates-worked\">February 2013 - June 2017</span>\n                    <p>Led the editorial team and oversaw all newspaper operations to publish weekly at the host school, NJIT.</p>\n                    <h4>GDS - University Heights</h4>\n                    <span className=\"dates-worked\">October 2015 - August 2017</span>\n                    <p>Created and established brands and design languages with logos, menus, maps, and signs for new ventures and food venues marketed to students.</p>\n                </div>\n            </div>\n\n        </div >\n    </div>\n\nexport default About","import React from 'react'\nimport './workhome.css'\nimport { Portfolio } from './PDF Design Portfolio.pdf'\n\nexport const Work = () =>\n    <div>\n        <div className=\"flex-c-outer\">\n\n            <div className=\"project\" >\n                <h1>GOHORT</h1>\n            </div>\n\n            <div className=\"project\">\n                <h1>AGUA VIDA</h1>\n            </div>\n\n            <div className=\"project\">\n                <h1>PEACE CORPS</h1>\n            </div>\n\n        </div >\n        <a href={{ Portfolio }} className=\"button\" download=\"download\"> Download PDF Portfolio </a>\n    </div>\nexport default Work","import React from 'react';\nimport { About } from './pages/About Page/about'\nimport { Work } from './pages/Work Pages/work'\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  NavLink\n} from \"react-router-dom\";\nimport { AiFillMail, AiFillLinkedin, AiFillGithub } from \"react-icons/ai\"\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"namehead\" >\n        <h1>Stephen Chan</h1>\n        <span> <AiFillMail className=\"icon\" /> <AiFillLinkedin className=\"icon\" /> <AiFillGithub className=\"icon\" /></span>\n      </div>\n      <div className=\"navigation site-header\">\n\n        <NavLink className=\"link dropdown\" activeStyle={{\n          color: '#235789',\n          borderStyle: 'none none solid none',\n          fontWeight: 'bolder'\n        }} to=\"/work\">WORK\n          </NavLink>\n\n        <NavLink className=\"link float-right\" activeStyle={{\n          color: '#235789',\n          borderStyle: 'none none solid none',\n          fontWeight: 'bolder'\n        }} to=\"/about\">ABOUT</NavLink>\n\n      </div>\n      <Switch >\n        <Redirect exact from=\"/\" to=\"/about\" />\n\n        <Route path=\"/about\">\n          <About />\n        </Route>\n\n        <Route path=\"/work\">\n          <Work />\n        </Route>\n\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}